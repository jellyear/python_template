class Car():
	"""자동차를 나타내는 코드"""
	def __init__():
		"""자동차를 나타내는 속성 초기화"""
		# init 메서드는 매개변수를 받고, 이 클래스에서 만들 인스턴스와 연결될 속성에 저장한다.
		# 1. 자동차의 정보는 자동차의 브랜드, 모델 넘버, 만들어진 년도가 있다.
	
	def fill_gas_tank():
		print("Charging...")
		
	# 2. 자동차의 정보를 요약하는 메서드를 만들자.

# 3. 자동차의 인스턴스를 하나 만들어라.

# 4. 자동차의 주행거리를 저장할 속성을 추가하라. (기본값 = 0) 또 자동차의 주행거리를 확인하는 메서드를 하나 만들어라.

# 5. 자동차의 주행거리 표시기를 23으로 바꾸어라. (점 표기법을 사용)

# 6. 새로운 자동차 인스턴스를 하나 만들고, 자동차의 주행거리를 업데이트 하는 메서드를 만들자. 파라미터로 변경할 주행거리를 보낸다. 25로 변경해보자.
# 조건 : 기존의 주행거리보다는 무조건 커야 한다.

# 7. 새로운 중고 자동차 인스턴스를 하나 만들자. 그리고 중고 자동차를 샀다면 구입 시점과 등록 시점 사이에 100마일을 추가한다고 하자. 
# 주행거리를 얼마나 늘릴지 파라미터로 받고 그 값을 주행거리에 추가하는 메서드를 만들자.
# 조건 : 늘리는 주행거리에 음수는 들어갈 수 없다.

# 8. class Car 를 상속하는 class ElectricCar 를 만들어보자.
# ElectricCar 인스턴스를 만들어 보자.

# 9. 전기자동차에만 해당하는 속성(e.g. 배터리)과 이 속성에 대해 보고하는 메서드를 추가하자.
# 배터리 크기를 저장하고 배터리 설명을 출력하는 메서드도 추가하자.
 
# 10. fill_gas_tank() 메서드를 오버라이드 해서 전기자동차에는 연료 탱크가 없음을 나타내자.
